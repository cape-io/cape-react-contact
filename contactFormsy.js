// Generated by CoffeeScript 1.9.3
var Formsy, Input, React, Textarea, http, ref;

React = require('react');

Formsy = require('formsy-react');

http = require('superagent');

ref = require('formsy-react-components'), Input = ref.Input, Textarea = ref.Textarea;

module.exports = React.createClass({displayName: "exports",
  getInitialState: function() {
    return {
      canSubmit: false
    };
  },
  enableButton: function() {
    this.setState({
      canSubmit: true
    });
  },
  disableButton: function() {
    this.setState({
      canSubmit: false
    });
  },
  submit: function(data, resetForm, invalidateForm) {
    data.siteId = 'cape';
    if (!data.url) {
      delete data.url;
    }
    console.log(data);
    http.post('/api/contact').send(data).type('json').end(function(res) {
      var badRequest, body;
      badRequest = res.badRequest, body = res.body;
      if (res.badRequest) {
        return alert(body != null ? body.message : void 0);
      } else {
        console.log(body);
        if ((body != null ? body.status : void 0) === 'sent') {
          alert("Sent email to " + body.email + ". \n Confirmation: " + body._id);
          return resetForm();
        } else {
          return alert('The message failed to send.');
        }
      }
    });
  },
  render: function() {
    var canSubmit;
    canSubmit = this.state.canSubmit;
    return React.createElement(Formsy.Form, {
      "onValidSubmit": this.submit,
      "onValid": this.enableButton,
      "onInvalid": this.disableButton
    }, React.createElement("div", null, "Hello!"), React.createElement(Input, {
      "name": "name",
      "validations": {
        maxLength: 75,
        minLength: 3
      },
      "validationError": "Is this really your name?",
      "label": "Your Name",
      "required": true
    }), React.createElement(Input, {
      "name": "email",
      "validations": "isEmail",
      "validationError": "This is not a valid email",
      "label": "Your Email",
      "required": true
    }), React.createElement(Input, {
      "name": "phone",
      "validations": {
        maxLength: 20
      },
      "validationError": "That doesn't look right.",
      "label": "Your Phone"
    }), React.createElement(Input, {
      "layout": "elementOnly",
      "name": "url",
      "className": "hidden",
      "validations": "isEmptyString",
      "validationError": "This field is only for spam bots.",
      "label": "Leave this URL field empty!"
    }), React.createElement(Input, {
      "name": "subject",
      "label": "Subject",
      "validations": {
        maxLength: 140
      },
      "validationErrors": {
        maxLength: 'Whooa there, keep the subject under 140 characters please.'
      },
      "validationError": "Your subject line is no good."
    }), React.createElement(Textarea, {
      "name": "body",
      "label": "Message",
      "validations": {
        maxLength: 25000
      },
      "validationError": "Too much text for us to handle...",
      "required": true
    }), React.createElement("button", {
      "type": "submit",
      "disabled": !canSubmit
    }, "Submit"));
  }
});
